name: Azure SQL Query Runner
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-passportai-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM dbo.MarketSize"

jobs:
  query-database:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install ODBC Driver
      run: |
        sudo rm -f /etc/apt/sources.list.d/microsoft*.list
        sudo rm -f /usr/share/keyrings/microsoft*.gpg
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/22.04/prod jammy main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev

    - name: Setup Python
      run: |
        sudo apt-get install -y python3-pip
        pip install pyodbc pandas

    - name: Get Access Token
      run: |
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Execute Query
      run: |
        python3 -c "
        import os
        import pyodbc
        import pandas as pd
        import msal
        
        server = os.environ['SQL_SERVER']
        database = os.environ['DATABASE_NAME']
        query = os.environ['SQL_QUERY']
        token = os.environ['TOKEN']
        AUTHORITY = f"https://login.microsoftonline.com/${{ secrets.AZURE_TENANT_ID }}"
        SCOPES = ["https://database.windows.net//.default"]
        PORT = 1433
        
        try:

            app = msal.PublicClientApplication(${{ secrets.AZURE_CLIENT_ID }}, authority=AUTHORITY)
            result = app.acquire_token_interactive(scopes=SCOPES)
            access_token = result["access_token"]
            connection_string =(
                "Driver={{ODBC Driver 18 for SQL Server}};",
                f"server=Server=tcp:emi-qa-passportai-we-svm.database.windows.net,1433,"
                f"Database={database};",
                "Authentication=ActiveDirectoryAccessToken;"
            )
            conn = pyodbc.connect(connection_string, attrs_before={1256: access_token})
            cursor = conn.cursor()
            cursor.execute(query)
            # Fetch and display the results
            rows = cursor.fetchall()
            for row in rows:
            print(row)

            # Clean up
            cursor.close()
            conn.close()
            # df = pd.read_sql(query, conn)
            # df.to_csv('results.csv', index=False)
            # print('Success! First 5 rows:\\n', df.head())
        
        except Exception as e:
            print(f'Error: {str(e)}')
            raise
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
