name: Azure SQL Query Runner
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-numberstation-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM Persons"

jobs:
  query-database:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install ODBC Driver (Fixed)
      run: |
        # Clean environment
        sudo rm -rf /etc/apt/sources.list.d/microsoft*
        sudo rm -f /usr/share/keyrings/microsoft*

        # Add Microsoft repository
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mssql-release.list

        # Install with forced dependencies
        sudo apt-get update
        sudo apt-get install -y debconf-utils
        echo "msodbcsql18 msodbcsql/ACCEPT_EULA boolean true" | sudo debconf-set-selections
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
        sudo apt-get install -y odbcinst

        # Verify installation
        odbcinst -q -d -n "ODBC Driver 18 for SQL Server"
        ls -l /opt/microsoft/msodbcsql18/lib64/libmsodbcsql-*

    - name: Setup Python
      run: |
        sudo apt-get install -y python3-pip
        pip install pyodbc pandas

    - name: Get Access Token
      run: |
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Run Python Script
      run: |
        python3 -c "
        import pyodbc
        import os
        
        # Use access token directly
        conn = pyodbc.connect(
            driver='ODBC Driver 18 for SQL Server',
            server=os.environ['SQL_SERVER'],
            database=os.environ['DATABASE_NAME'],
            Encrypt='yes',
            TrustServerCertificate='no',
            attrs_before={
                1256: os.environ['TOKEN'].encode('utf-8')  # SQL_COPT_SS_ACCESS_TOKEN
            }
        )
        cursor = conn.cursor()
        cursor.execute(os.environ['SQL_QUERY'])
        print(cursor.fetchall())
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
