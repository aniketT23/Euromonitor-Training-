name: Azure SQL Query Runner
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-passportai-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM dbo.MarketSize"

jobs:
  query-database:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install ODBC Driver (Stable Version)
      run: |
        # Clean environment
        sudo rm -rf /etc/apt/sources.list.d/microsoft*
        sudo rm -f /usr/share/keyrings/microsoft*

        # Add Microsoft repository
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/20.04/prod focal main" | sudo tee /etc/apt/sources.list.d/mssql-release.list

        # Install specific working version
        sudo apt-get update
        sudo apt-get install -y debconf-utils
        echo "msodbcsql17 msodbcsql/ACCEPT_EULA boolean true" | sudo debconf-set-selections
        sudo apt-get install -y msodbcsql17 unixodbc-dev
        odbcinst -q -d

    - name: Setup Python Environment
      run: |
        sudo apt-get install -y python3-pip
        pip install pyodbc pandas

    - name: Get Access Token
      run: |
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)
        echo "TOKEN_LENGTH=${#TOKEN}" >> $GITHUB_ENV
        echo "TOKEN=${TOKEN}" >> $GITHUB_ENV

    - name: Execute Query (Stable Configuration)
      run: |
        python3 -c "
        import os
        import pyodbc
        import pandas as pd
        
        print(f'Using pyodbc version: {pyodbc.version}')
        print(f'Token length: {len(os.environ["TOKEN"])}')
        
        try:
            conn = pyodbc.connect(
                driver='ODBC Driver 17 for SQL Server',
                server=os.environ['SQL_SERVER'],
                database=os.environ['DATABASE_NAME'],
                encrypt='yes',
                trustservercertificate='no',
                autocommit=True,
                attrs_before={
                    1256: os.environ['TOKEN'].encode('utf-8')
                }
            )
            print('Connection established successfully!')
            
            df = pd.read_sql(os.environ['SQL_QUERY'], conn)
            df.to_csv('results.csv', index=False)
            print('First 3 rows:', df.head(3))
            
        except Exception as e:
            print(f'ERROR DETAILS: {str(e)}')
            raise
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
