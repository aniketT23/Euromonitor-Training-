name: Azure SQL Query Runner
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-passportai-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM dbo.MarketSize"

jobs:
  query-database:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        
    - name: Get Azure Access Token
      run: |
        ACCESS_TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken --output tsv)
        echo "Access Token (Base64 Encoded):"
        echo $ACCESS_TOKEN | base64  # Encode to bypass GitHub masking


    - name: Install ODBC Driver
      run: |
        # Clean existing Microsoft configurations
        sudo rm -f /etc/apt/sources.list.d/microsoft*.list
        sudo rm -f /usr/share/keyrings/microsoft*.gpg

        # Add Microsoft repository
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/22.04/prod jammy main" | sudo tee /etc/apt/sources.list.d/mssql-release.list

        # Install driver
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
        odbcinst -q -d -n "ODBC Driver 18 for SQL Server"

    - name: Setup Python
      run: |
        sudo apt-get install -y python3-pip
        pip install pyodbc pandas

    - name: Get Access Token
      run: |
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Execute Query
      run: |
        python3 -c "
        import pyodbc, os, pandas as pd
        from datetime import datetime
        
        try:
            # Entra MFA connection configuration
            connection_string = (
                f'DRIVER=ODBC Driver 18 for SQL Server;'
                f'SERVER={os.environ["SQL_SERVER"]};'
                f'DATABASE={os.environ["DATABASE_NAME"]};'
                f'Authentication=ActiveDirectoryPasswordless;'
            )
            
            # Establish connection using access token
            conn = pyodbc.connect(
                connection_string,
                attrs_before={
                    1256: bytearray(os.environ['TOKEN'], 'utf-8')
                }
            )
            
            # Execute query
            df = pd.read_sql(os.environ['SQL_QUERY'], conn)
            df.to_csv('results.csv', index=False)
            print('Query successful! First 5 rows:')
            print(df.head())
            
        except pyodbc.Error as e:
            print(f'SQL Error: {e}')
            raise
        except Exception as e:
            print(f'General Error: {e}')
            raise
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
