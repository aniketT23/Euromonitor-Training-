name: Azure SQL Query Runner
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-passportai-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM dbo.MarketSize"

jobs:
  query-database:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install ODBC Driver
      run: |
        # Install Microsoft ODBC Driver 18
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
        
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
        odbcinst -j  # Verify installation

    - name: Run Query with Python
      run: |
        # Install Python dependencies
        python -m pip install --upgrade pip
        pip install pyodbc pandas

        # Get Azure AD token
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)

        # Python script
        python -c "
        import pyodbc, os, pandas as pd
        
        try:
            conn = pyodbc.connect(
                driver='ODBC Driver 18 for SQL Server',  # Exact driver name
                server=os.environ['SQL_SERVER'],
                database=os.environ['DATABASE_NAME'],
                Authentication='ActiveDirectoryPasswordless',
                AccessToken='$TOKEN'
            )
            df = pd.read_sql(os.environ['SQL_QUERY'], conn)
            df.to_csv('results.csv', index=False)
            print('Query successful! First 5 rows:')
            print(df.head())
        except Exception as e:
            print(f'Error: {e}')
            raise
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
