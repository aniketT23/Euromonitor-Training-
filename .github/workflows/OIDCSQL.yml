name: Connect to Azure SQL with Access Token
on: [workflow_dispatch]

env:
  SQL_SERVER: emi-qa-numberstation-we-svm.database.windows.net
  DATABASE_NAME: GenAIStatistics
  SQL_QUERY: "SELECT TOP 10 * FROM dbo.Persons"

jobs:
  connect-to-sql:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read

    steps:
    - name: Azure Login (OIDC)
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install ODBC Driver
      run: |
        # Install latest ODBC Driver 18
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
        sudo apt-get install -y unixodbc-dev

    - name: Get Access Token
      run: |
        # Retrieve token for Azure SQL Database
        TOKEN=$(az account get-access-token --resource https://database.windows.net --query accessToken -o tsv)
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV
        echo "TOKEN_LENGTH=${#TOKEN}" >> $GITHUB_ENV

    - name: Execute SQL Query
      run: |
        python3 -c "
        import os
        import pyodbc

        token = os.environ['TOKEN']
        server = os.environ['SQL_SERVER']
        database = os.environ['DATABASE_NAME']
        query = os.environ['SQL_QUERY']

        try:
            # Connect using access token
            conn = pyodbc.connect(
                driver='ODBC Driver 18 for SQL Server',
                server=server,
                database=database,
                encrypt='yes',
                trustservercertificate='no',
                attrs_before={
                    1256: token.encode('utf-16-le')  # SQL_COPT_SS_ACCESS_TOKEN
                }
            )
            
            # Execute query
            cursor = conn.cursor()
            cursor.execute(query)
            results = cursor.fetchall()
            
            # Print results
            print(f'Success! Retrieved {len(results)} rows:')
            for row in results:
                print(row)
                
            # Export to CSV
            with open('results.csv', 'w') as f:
                f.write('Results:\\n')
                for row in results:
                    f.write(','.join(map(str, row)) + '\\n')
                    
            cursor.close()
            conn.close()
            
        except pyodbc.Error as e:
            print(f'SQL Error: {str(e)}')
            raise
        "

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: sql-results
        path: results.csv
